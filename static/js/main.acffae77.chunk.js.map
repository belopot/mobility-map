{"version":3,"sources":["icons/car.svg","icons/bike.svg","icons/scooter.svg","components/BottomBar.js","components/Selector.js","components/ProviderList.js","util/filter.js","components/Sidebar.js","components/GridLabels.js","config.js","views.js","util/hexToRgba.js","components/layers/hex.js","components/layers/arcs.js","components/layers/paths.js","components/layers/trips.js","util/interpolate.js","components/Map.js","App.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","addDays","date","days","result","Date","setDate","getDate","Histogram","_ref","data","min","max","_useState","useState","_useState2","Object","slicedToArray","width","setWidth","container","useRef","useEffect","current","offsetWidth","window","onresize","setTimeout","x","d3","domain","rangeRound","bins","value","d","thresholds","ticks","histogram","map","properties","startDate","y","range","length","react_default","a","createElement","className","ref","height","i","key","transform","concat","x0","x1","connect","state","dispatch","_ref2","minDate","maxDate","initialMin","initialMax","toLocaleString","split","BottomBar_Histogram","style","marginLeft","es","onChange","evt","type","payload","count","defaultValue","allowCross","trackStyle","backgroundColor","step","handleStyle","borderRadius","border","padding","railStyle","Selector","handleClick","index","_this","props","changeActive","options","_this2","this","grid","gridTemplateColumns","classes","active","push","join","onClick","charAt","toUpperCase","substring","React","Component","icons","car","carIcon","bike","bikeIcon","scooter","scooterIcon","units","distance","trips","price","numberWithCommas","toString","replace","ProviderList","providers","activeMetric","provider","filteredData","filter","name","reduce","b","cost","background","color","format","toFixed","modes","mode","src","alt","output","_loop","apply","toConsumableArray","filterState","objectSpread","Section","children","borderTop","activeLayer","activeView","Fragment","marginBottom","href","Sidebar_Section","src_components_Selector","src_components_ProviderList","GridLabels","l","labels","label","viewStates","bearing","latitude","longitude","pitch","zoom","getGridView","id","controller","size1","size2","hexToRgba","hex","arguments","undefined","alpha","_ref$format","_ref$alpha","r","parseInt","slice","g","aggregate","startCoordinates","Number","endCoordinates","HexagonLayer","pickable","radius","extruded","elevationScale","getPosition","colorRange","hextToRgba","arcs","ArcLayer","autoHighlight","highlightColor","getWidth","getSourcePosition","getTargetPosition","getSourceColor","color2","getTargetColor","paths","PathLayer","widthScale","widthMinPixels","widthMaxPixels","getPath","geometry","coordinates","getColor","rounded","parameters","depthTest","time","TripsLayer","path","getTimestamps","_ref3","opacity","trailLength","currentTime","interpolate","row","along","setTime","_useState3","initialViewStates","_useState4","setViewStates","document","getElementById","oncontextmenu","preventDefault","interval","console","log","t","copy","requestAnimationFrame","cancelAnimationFrame","tripsData","useMemo","views","layers","tripLayer","pathLayer","hexLayer","arcLayer","src_components_GridLabels","deckgl","onViewStateChange","viewId","viewState","temp","view","map_view","assign","initialViewState","esm","mapboxApiAccessToken","src_components_Sidebar","src_components_BottomBar","components_Map","initialState","Math","store","createStore","action","forEach","__REDUX_DEVTOOLS_EXTENSION__","render","react_redux_es","src_App_0"],"mappings":"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","file":"static/js/main.acffae77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car.18180132.svg\";","module.exports = __webpack_public_path__ + \"static/media/bike.ba4fb8df.svg\";","module.exports = __webpack_public_path__ + \"static/media/scooter.47924a3a.svg\";","import React, { useRef, useEffect, useState } from 'react';\nimport './BottomBar.css';\nimport * as d3 from 'd3';\nimport { Range } from 'rc-slider';\nimport './Slider.css';\nimport { connect } from 'react-redux';\n\nfunction addDays(date, days) {\n   const result = new Date(date);\n   result.setDate(result.getDate() + days);\n   return result;\n}\n\nconst Histogram = ({ data, min, max }) => {\n   const [width, setWidth] = useState(null);\n   const container = useRef(null);\n   useEffect(() => {\n      setWidth(() => container.current.offsetWidth);\n      window.onresize = () => {\n         setTimeout(() => {\n            setWidth(() => container.current.offsetWidth);\n         }, 300);\n      };\n   }, []);\n\n   const height = 50;\n\n   const x = d3\n      .scaleTime()\n      .domain([addDays(min, -7), addDays(max, 7)])\n      .rangeRound([0, width]);\n\n   const histogram = d3\n      .histogram()\n      .value((d) => d)\n      .domain(x.domain())\n      .thresholds(x.ticks(d3.timeMonth));\n\n   const bins = histogram(data.map((x) => new Date(x.properties.startDate)));\n\n   const y = d3\n      .scaleLinear()\n      .range([height, 0])\n      .domain([0, d3.max(bins, (d) => d.length)]);\n\n   return (\n      <div className=\"histogram\" ref={container}>\n         <svg width={width} height={height}>\n            <g>\n               {bins.map((d, i) => (\n                  <rect\n                     key={i}\n                     className=\"bar\"\n                     x={1}\n                     transform={`translate(${x(d.x0)},${y(d.length)})`}\n                     width={\n                        x(d.x1) - x(d.x0) - 1 > 0 ? x(d.x1) - x(d.x0) - 1 : 0\n                     }\n                     height={height - y(d.length)}\n                  />\n               ))}\n            </g>\n         </svg>\n      </div>\n   );\n};\n\nconst BottomBar = ({\n   data,\n   minDate: min,\n   maxDate: max,\n   initialMin,\n   initialMax,\n   dispatch,\n}) => {\n   return (\n      <div className=\"bottom-bar\">\n         <div className=\"date-row\">\n            <div>{new Date(min).toLocaleString().split(',')[0]}</div>\n            <div>{new Date(max).toLocaleString().split(',')[0]}</div>\n         </div>\n\n         <Histogram data={data} min={initialMin} max={initialMax} />\n         <div style={{ marginLeft: '5px' }}>\n            <Range\n               onChange={(evt) =>\n                  dispatch({ type: 'SET_DATE_FILTER', payload: evt })\n               }\n               min={initialMin}\n               max={initialMax}\n               count={2}\n               defaultValue={[initialMin, initialMax]}\n               allowCross={false}\n               trackStyle={[{ backgroundColor: '#363636' }]}\n               step={8000000}\n               handleStyle={[\n                  {\n                     backgroundColor: 'black',\n                     borderRadius: '0',\n                     border: '0',\n                     width: '8px',\n                     padding: '0',\n                  },\n                  {\n                     backgroundColor: 'black',\n                     borderRadius: '0',\n                     border: '0',\n                     width: '8px',\n                     padding: '0',\n                  },\n               ]}\n               railStyle={{ backgroundColor: '#D6D6D6' }}\n            />\n         </div>\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => state;\nconst mapDispatchToProps = (dispatch) => ({ dispatch });\nexport default connect(mapStateToProps, mapDispatchToProps)(BottomBar);\n","import React from 'react';\nimport './Selector.css';\n\nclass Selector extends React.Component {\n   handleClick = (index) => {\n      this.props.changeActive(this.props.type, this.props.options[index]);\n   };\n   render() {\n      const grid = {\n         gridTemplateColumns: ` repeat(${this.props.options.length}, 1fr)`,\n      };\n\n      return (\n         <div style={grid} className=\"selector-outside\">\n            {this.props.options.map((x, i) => {\n               const classes = ['selector-option', 'noselect'];\n               if (this.props.active === x) {\n                  if (i === 0) {\n                     classes.push('left-selector-active');\n                  } else if (i === this.props.options.length - 1) {\n                     classes.push('right-selector-active');\n                  } else {\n                     classes.push('selector-active');\n                  }\n               } else {\n                  if (i !== 0 && i !== this.props.options.length - 1) {\n                     if (i === 1 && this.props.options.length > 2) {\n                        classes.push('first-center-selector-option');\n                     } else {\n                        classes.push('center-selector-option');\n                     }\n                  }\n               }\n               return (\n                  <div\n                     className={classes.join(' ')}\n                     key={i}\n                     onClick={() => this.handleClick(i)}\n                  >\n                     {x.charAt(0).toUpperCase() + x.substring(1)}\n                  </div>\n               );\n            })}\n         </div>\n      );\n   }\n}\n\nexport default Selector;\n","import React from 'react';\nimport './ProviderList.css';\n\nimport carIcon from '../icons/car.svg';\nimport bikeIcon from '../icons/bike.svg';\nimport scooterIcon from '../icons/scooter.svg';\n\nconst icons = {\n   car: carIcon,\n   bike: bikeIcon,\n   scooter: scooterIcon,\n};\n\nconst units = {\n   distance: 'miles',\n   trips: 'trips',\n   price: 'dollars',\n};\n\nfunction numberWithCommas(x) {\n   return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nconst ProviderList = ({ data, providers, handleClick, activeMetric }) => {\n   return providers.map((provider, i) => {\n      const filteredData = data.filter(\n         (x) => x.properties.provider === provider.name\n      );\n\n      let value = 0;\n      let max = 0;\n\n      if (provider.active) {\n         if (activeMetric === 'trips') {\n            value = filteredData.length;\n            max = data.length;\n         } else if (activeMetric === 'distance') {\n            if (\n               (value ===\n                  filteredData.map((x) => x.properties.distance).length) ===\n               0\n            ) {\n               value = 0;\n            } else {\n               value = filteredData\n                  .map((x) => x.properties.distance)\n                  .reduce((a, b) => a + b);\n            }\n\n            max = data\n               .map((x) => x.properties.distance)\n               .reduce((a, b) => a + b);\n         } else if (activeMetric === 'price') {\n            if (filteredData.map((x) => x.properties.cost).length === 0) {\n               value = 0;\n            } else {\n               value = filteredData\n                  .map((x) => x.properties.cost)\n                  .reduce((a, b) => a + b);\n            }\n\n            max = data.map((x) => x.properties.cost).reduce((a, b) => a + b);\n         }\n      }\n\n      const style = {\n         background: provider.active ? provider.color : '#DBDBDB',\n         width: provider.active ? (value / max) * 100 + '%' : '0%',\n      };\n\n      let format = '';\n      if (activeMetric === 'price') {\n         format = `$${numberWithCommas(value.toFixed(2))}`;\n      } else if (activeMetric === 'distance') {\n         format = `${numberWithCommas(value.toFixed(0))} ${\n            units[activeMetric]\n         }`;\n      } else if (activeMetric === 'trips') {\n         format = `${value} ${units[activeMetric]}`;\n      }\n      return (\n         <div\n            key={i}\n            className=\"provider noselect\"\n            onClick={() => handleClick(provider.name)}\n         >\n            <div style={style} className=\"line\" />\n            <span\n               style={{ color: provider.active ? 'black' : '#737373' }}\n               className=\"title\"\n            >\n               {provider.name.charAt(0).toUpperCase() +\n                  provider.name.substring(1)}\n            </span>\n            {<span className=\"sub\">{format}</span>}\n\n            <div className=\"icon-container\">\n               {provider.active &&\n                  provider.modes.map((mode, i) => (\n                     <img\n                        key={i}\n                        style={{ height: '17px' }}\n                        src={icons[mode]}\n                        alt=\"transportation mode icon\"\n                     />\n                  ))}\n               {!provider.active && <span> (hidden)</span>}\n            </div>\n         </div>\n      );\n   });\n};\n\nexport default ProviderList;\n","function filter(data, { providers, minDate, maxDate }) {\n   const output = [];\n   for (let i = 0; i < providers.length; i++) {\n      if (providers[i].active) {\n         output.push(\n            ...data.filter((x) => x.properties.provider === providers[i].name)\n         );\n      }\n   }\n   return output\n      .filter((x) => new Date(x.properties.startDate) >= minDate)\n      .filter((x) => new Date(x.properties.startDate) <= maxDate);\n}\n\nfunction filterState(state) {\n   const { providers, minDate, maxDate, data } = state;\n   return {\n      ...state,\n      data: filter(data, { providers, minDate, maxDate }),\n   };\n}\n\nexport default filterState;\n","import React from 'react';\nimport './Sidebar.css';\nimport Selector from './Selector';\nimport ProviderList from './ProviderList';\nimport { connect } from 'react-redux';\nimport filterState from '../util/filter';\n\nconst Section = ({ children }) => {\n   return (\n      <div\n         style={{\n            borderTop: '1px solid #E8E8E8',\n            padding: '15px 0',\n         }}\n      >\n         {children}\n      </div>\n   );\n};\n\nconst Sidebar = ({\n   data,\n   dispatch,\n   activeMetric,\n   providers,\n   activeLayer,\n   activeView,\n}) => {\n   return (\n      <div className=\"sidebar\">\n         <h1>Dylan's Mobility Service Map</h1>\n\n         <>\n            <p style={{ marginBottom: 15 }}>\n               A visualization of my mobility service trips. Made by{' '}\n               <a href=\"https://twitter.com/dbabbs\">@dbabbs</a>\n            </p>\n            <Section>\n               <h2>Trip Analytics</h2>\n               <Selector\n                  type=\"metric\"\n                  options={['trips', 'price', 'distance']}\n                  active={activeMetric}\n                  changeActive={(key, value) =>\n                     dispatch({\n                        type: 'SET_ACTIVE',\n                        payload: { key, value },\n                     })\n                  }\n               />\n               <ProviderList\n                  handleClick={(provider) =>\n                     dispatch({\n                        type: 'SET_PROVIDER',\n                        payload: provider,\n                     })\n                  }\n                  providers={providers}\n                  data={data}\n                  activeMetric={activeMetric}\n               />\n               <p> Filter a mobility provider by clicking on it. </p>\n            </Section>\n            <Section>\n               <h2>Toggle Layer Type</h2>\n               <Selector\n                  type=\"layer\"\n                  options={['polylines', 'hexbins', 'arcs', 'animate']}\n                  active={activeLayer}\n                  changeActive={(key, value) =>\n                     dispatch({\n                        type: 'SET_ACTIVE',\n                        payload: { key, value },\n                     })\n                  }\n               />\n               <p>\n                  {activeLayer === 'polylines' &&\n                     'Polyines - approximate route of trip.'}\n                  {activeLayer === 'hexbins' &&\n                     'Hexbins - aggregated pickups & dropoffs.'}\n                  {activeLayer === 'arcs' &&\n                     'Arcs - pickup and dropoff points.'}\n                  {activeLayer === 'animate' &&\n                     'Animate - some nice eye candy!'}\n               </p>\n            </Section>\n            <Section>\n               <h2>Toggle View</h2>\n               <Selector\n                  type=\"view\"\n                  options={['single', 'double', 'grid']}\n                  active={activeView}\n                  changeActive={(key, value) =>\n                     dispatch({\n                        type: 'SET_ACTIVE',\n                        payload: { key, value },\n                     })\n                  }\n               />\n            </Section>\n         </>\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => filterState(state);\nconst mapDispatchToProps = (dispatch) => ({ dispatch });\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React from 'react';\nimport './GridLabels.css';\nconst GridLabels = ({ labels }) => {\n   const l = labels.map((x) => x.name);\n   return (\n      <div className=\"grid-grid\">\n         {l.map((label, i) => {\n            return (\n               <div key={i}>\n                  <div className=\"label\">{label}</div>\n               </div>\n            );\n         })}\n      </div>\n   );\n};\n\nexport default GridLabels;\n","export const MAPBOX_TOKEN =\n   'pk.eyJ1IjoiYmFiYnMiLCJhIjoiY2s1b2JoMjZvMGYydzNmbXAxMXp1NWZhZyJ9.LEHmtAFLAij67eF-54FjxA';\n\nexport const viewStates = [\n   {\n      bearing: 12.142857142857139,\n      latitude: 47.60606068653785,\n      longitude: -122.32597899136749,\n      pitch: 44.76005900975915,\n      zoom: 12.204516441329957,\n      name: 'Seattle, WA',\n   },\n   {\n      bearing: -35.61576354679803,\n      latitude: 52.502718016262506,\n      longitude: 13.414221473954736,\n      pitch: 60,\n      zoom: 12.294995518326635,\n      name: 'Berlin, Germany',\n   },\n   {\n      longitude: -122.41251212803706,\n      latitude: 37.77116905512072,\n      zoom: 8,\n      pitch: 20,\n      bearing: 0,\n      name: 'San Francisco, CA',\n   },\n   {\n      longitude: -117.19453161713136,\n      latitude: 32.7459306899641,\n      zoom: 8,\n      pitch: 20,\n      bearing: 0,\n      name: 'San Diego, CA',\n   },\n   {\n      longitude: -87.65142984345374,\n      latitude: 41.87225195677442,\n      zoom: 10,\n      pitch: 20,\n      bearing: 0,\n      name: 'Chicago, IL',\n   },\n   {\n      longitude: -66.06411721833007,\n      latitude: 18.465526764926423,\n      zoom: 11,\n      pitch: 20,\n      bearing: 0,\n      name: 'San Juan, PR',\n   },\n   {\n      longitude: -83.03440701349251,\n      latitude: 42.34305805549184,\n      zoom: 8,\n      pitch: 20,\n      bearing: 0,\n      name: 'Detroit, MI',\n   },\n   {\n      longitude: 28.97953,\n      latitude: 41.015137,\n      zoom: 10,\n      pitch: 20,\n      bearing: 0,\n      name: 'Istanbul, Turkey',\n   },\n   {\n      longitude: 4.899431,\n      latitude: 52.379189,\n      zoom: 10,\n      pitch: 20,\n      bearing: 0,\n      name: 'Amsterdam, Netherlands',\n   },\n];\n\nexport const providers = [\n   {\n      name: 'uber',\n      color: '#276EF1',\n      color2: [39, 110, 241, 200],\n      modes: ['car'],\n      active: true,\n   },\n   {\n      name: 'jump',\n      color: '#E73A14',\n      color2: [231, 58, 20, 200],\n      modes: ['bike', 'scooter'],\n      active: true,\n   },\n   {\n      name: 'lime',\n      color: '#25CF00',\n      color2: [37, 207, 0, 200],\n      modes: ['bike', 'scooter'],\n      active: true,\n   },\n   {\n      name: 'lyft',\n      color: '#FE00D8',\n      color2: [254, 0, 126, 200],\n      modes: ['car'],\n      active: true,\n   },\n];\n","const getGridView = (activeView) => {\n   if (activeView === 'single') {\n      return [\n         {\n            id: '0',\n            width: '100%',\n            height: '100%',\n            controller: true,\n         },\n      ];\n   } else if (activeView === 'double') {\n      return [\n         {\n            id: '0',\n            width: '50%',\n            height: '100%',\n            controller: true,\n         },\n         {\n            id: '1',\n            width: '50%',\n            height: '100%',\n            x: '50%',\n            controller: true,\n         },\n      ];\n   } else {\n      const size1 = (1 / 3) * 100 + '%';\n      const size2 = (2 / 3) * 100 + '%';\n      return [\n         //Row 1\n         {\n            id: 'top',\n            width: size1,\n            height: size1,\n            controller: true,\n         },\n         {\n            id: 'bottom',\n            x: size1,\n            y: 0,\n            width: size1,\n            height: size1,\n            controller: true,\n         },\n         {\n            id: '2',\n            x: size2,\n            y: 0,\n            width: size1,\n            height: size1,\n            controller: true,\n         },\n\n         //Row 2\n         {\n            id: '3',\n            x: 0,\n            y: size1,\n            width: size1,\n            height: size1,\n            controller: true,\n         },\n         {\n            id: '4',\n            x: size1,\n            y: size1,\n            width: size1,\n            height: size1,\n            controller: true,\n         },\n         {\n            id: '5',\n            x: size2,\n            y: size1,\n            width: size1,\n            height: size1,\n            controller: true,\n         },\n\n         //Row 3\n         {\n            id: '6',\n            x: 0,\n            y: size2,\n            width: size1,\n            height: size1,\n            controller: true,\n         },\n         {\n            id: '7',\n            x: size1,\n            y: size2,\n            width: size1,\n            height: size1,\n            controller: true,\n         },\n         {\n            id: '8',\n            x: size2,\n            y: size2,\n            width: size1,\n            height: size1,\n            controller: true,\n         },\n      ];\n   }\n};\n\nexport default getGridView;\n","function hexToRgba(\n   hex,\n   { format = 'array', alpha = 1 } = { format: 'array', alpha: 1 }\n) {\n   const r = parseInt(hex.slice(1, 3), 16);\n   const g = parseInt(hex.slice(3, 5), 16);\n   const b = parseInt(hex.slice(5, 7), 16);\n   if (format === 'string') {\n      return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n   }\n   return [r, g, b, alpha * 255];\n}\nexport default hexToRgba;\n","import { HexagonLayer } from '@deck.gl/aggregation-layers';\nimport hextToRgba from '../../util/hexToRgba';\nfunction aggregate(data) {\n   return [\n      ...data.map((x) => x.properties.startCoordinates.map((x) => Number(x))),\n      ...data.map((x) => x.properties.endCoordinates.map((x) => Number(x))),\n   ];\n}\nconst hex = ({ data }) => {\n   return new HexagonLayer({\n      id: 'hexagon-layer',\n      data: aggregate(data),\n      pickable: true,\n      radius: 50,\n      extruded: true,\n      elevationScale: 4,\n      getPosition: (d) => d,\n      colorRange: [\n         '#ffffcc',\n         '#c7e9b4',\n         '#7fcdbb',\n         '#41b6c4',\n         '#2c7fb8',\n         '#253494',\n      ].map((x) => hextToRgba(x)),\n   });\n};\n\nexport default hex;\n","import { ArcLayer } from '@deck.gl/layers';\nconst arcs = ({ data, providers }) => {\n   return new ArcLayer({\n      id: 'arc-layer',\n      data,\n      pickable: true,\n      autoHighlight: true,\n      highlightColor: [249, 226, 0],\n      getWidth: 4,\n      getSourcePosition: (d) => d.properties.startCoordinates,\n      getTargetPosition: (d) => d.properties.endCoordinates,\n      getSourceColor: (d) => {\n         let provider = d.properties.provider;\n         return providers.filter((x) => x.name === provider)[0]\n            .color2;\n      },\n      getTargetColor: (d) => {\n         let provider = d.properties.provider;\n         return providers.filter((x) => x.name === provider)[0]\n            .color2;\n      },\n   });\n};\n\nexport default arcs;\n","import { PathLayer } from '@deck.gl/layers';\nconst paths = ({ data, providers }) => {\n   return new PathLayer({\n      id: 'path-layer',\n      data,\n      widthScale: 3,\n      widthMinPixels: 3,\n      widthMaxPixels: 3,\n      getPath: (d) => d.geometry.coordinates,\n      getColor: (d) => {\n         const provider = d.properties.provider;\n         return providers.filter((x) => x.name === provider)[0].color2;\n      },\n      rounded: true,\n      getWidth: 10,\n      pickable: true,\n      autoHighlight: true,\n      highlightColor: [249, 226, 0],\n      parameters: {\n         depthTest: false,\n      },\n   });\n};\n\nexport default paths;\n","import { TripsLayer } from '@deck.gl/geo-layers';\n\nconst trips = ({ data, providers, time }) => {\n   return new TripsLayer({\n      id: 'trips-layer',\n      data,\n      getPath: (d) => d.path,\n      getTimestamps: (d, { index }) => d.path.map((x, i) => i + index),\n      getColor: ({ provider }) =>\n         providers.filter((x) => x.name === provider)[0].color2,\n      opacity: 1,\n      widthMinPixels: 3,\n      rounded: true,\n      trailLength: 200,\n      currentTime: time,\n   });\n};\n\nexport default trips;\n","import along from '@turf/along';\nimport length from '@turf/length';\n\nconst step = 0.05;\nfunction interpolate(data) {\n   return data.map((row) => {\n      const l = length(row, { units: 'kilometers' });\n      let index = 0;\n      const path = [];\n      while (index * step < l) {\n         const { coordinates } = along(row, index * step, {\n            units: 'kilometers',\n         }).geometry;\n         index++;\n         path.push(coordinates);\n      }\n      return {\n         provider: row.properties.provider,\n         path,\n      };\n   });\n}\n\nexport default interpolate;\n","import React, { useEffect, useState, useMemo, useRef } from 'react';\n\nimport { MapView } from '@deck.gl/core';\nimport GridLabels from './GridLabels';\nimport { viewStates as initialViewStates, MAPBOX_TOKEN } from '../config';\nimport DeckGL from '@deck.gl/react';\nimport { StaticMap } from 'react-map-gl';\nimport getGridView from '../views';\n\nimport hexLayer from './layers/hex';\nimport arcLayer from './layers/arcs';\nimport pathLayer from './layers/paths';\nimport tripLayer from './layers/trips';\nimport filterState from '../util/filter';\nimport { connect } from 'react-redux';\nimport interpolate from '../util/interpolate';\n\nconst Map = ({ activeView, activeLayer, data, zoom, providers }) => {\n   const [time, setTime] = useState(0);\n   const [viewStates, setViewStates] = useState(initialViewStates);\n   useEffect(() => {\n      document.getElementById('deckgl-overlay').oncontextmenu = (evt) =>\n         evt.preventDefault();\n   }, []);\n   const interval = useRef(null);\n\n   const step = () => {\n      console.log(activeLayer);\n      setTime((t) => t + 1);\n      setViewStates((copy) =>\n         [...copy].map((x) => ({\n            ...x,\n            bearing: x.bearing + 0.04,\n         }))\n      );\n      requestAnimationFrame(step);\n   };\n\n   useEffect(() => {\n      if (activeLayer === 'animate') {\n         interval.current = requestAnimationFrame(step);\n      } else {\n         cancelAnimationFrame(interval.current);\n         interval.current = null;\n      }\n\n      return () => cancelAnimationFrame(interval.current);\n   }, [activeLayer === 'animate']);\n\n   const tripsData = useMemo(() => interpolate(data), [\n      ...providers.map((x) => x.active),\n   ]);\n\n   const views = getGridView(activeView);\n\n   const layers = [\n      activeLayer === 'animate'\n         ? tripLayer({ data: tripsData, providers, time })\n         : activeLayer === 'polylines'\n         ? pathLayer({\n              data,\n              providers,\n           })\n         : activeLayer === 'hexbins'\n         ? hexLayer({\n              data,\n              zoom,\n           })\n         : arcLayer({ data, providers }),\n   ];\n\n   return (\n      <div className=\"map-container\">\n         {activeView === 'grid' && <GridLabels labels={viewStates} />}\n         <DeckGL\n            layers={layers}\n            onViewStateChange={({ viewId, viewState }) => {\n               setViewStates((temp) => {\n                  const copy = [...temp];\n                  copy[Number(viewId)] = viewState;\n                  return copy;\n               });\n            }}\n            onClick={(evt) => console.log(viewStates[1])}\n         >\n            {views.map((view, i) => {\n               return (\n                  <MapView\n                     {...view}\n                     id={i.toString()}\n                     key={i}\n                     initialViewState={viewStates[i]}\n                     viewState={viewStates[i]}\n                  >\n                     <StaticMap mapboxApiAccessToken={MAPBOX_TOKEN} />\n                  </MapView>\n               );\n            })}\n         </DeckGL>\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => filterState(state);\nconst mapDispatchToProps = (dispatch) => ({ dispatch });\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\n","\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport BottomBar from './components/BottomBar';\nimport Sidebar from './components/Sidebar';\nimport Map from './components/Map';\nimport { connect } from 'react-redux';\n\nconst App = ({ activeLayer }) => {\n   useEffect(() => {\n      console.log(\n         'Thanks for taking a look under the hood. Questions? dylan.babbs@gmail.com'\n      );\n   }, []);\n   return (\n      <>\n         <Sidebar />\n         {activeLayer !== 'animate' && <BottomBar />}\n         <Map />\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => state;\nexport default connect(mapStateToProps)(App);\n","import { createStore } from 'redux';\nimport { viewStates, providers } from '../config';\nimport { features as data } from '../assets/data.json';\n\nconst initialState = {\n   viewStates,\n   data,\n   providers,\n   activeMetric: 'trips',\n   activeLayer: 'polylines',\n   activeView: 'double',\n   initialMin: Math.min(...data.map((x) => new Date(x.properties.startDate))),\n   initialMax: Math.max(...data.map((x) => new Date(x.properties.startDate))),\n   minDate: Math.min(...data.map((x) => new Date(x.properties.startDate))),\n   maxDate: Math.max(...data.map((x) => new Date(x.properties.startDate))),\n};\n\nconst reducer = (state = initialState, action) => {\n   const { payload, type } = action;\n   const copy = { ...state };\n\n   if (type === 'SET_ACTIVE') {\n      const { key, value } = payload;\n      if (key === 'metric') {\n         copy.activeMetric = value;\n      } else if (key === 'layer') {\n         copy.activeLayer = value;\n      } else if (key === 'view') {\n         copy.activeView = value;\n      }\n   } else if (type === 'SET_PROVIDER') {\n      const providers = [...copy.providers];\n      providers.forEach((provider) => {\n         if (provider.name === payload) {\n            provider.active = !provider.active;\n         }\n      });\n      copy.providers = providers;\n   } else if (type === 'SET_DATE_FILTER') {\n      copy.minDate = new Date(payload[0]);\n      copy.maxDate = new Date(payload[1]);\n   }\n   return copy;\n};\n\nconst store = createStore(\n   reducer,\n   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\nwindow.store = store;\n\nrender(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}