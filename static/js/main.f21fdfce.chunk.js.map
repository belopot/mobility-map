{"version":3,"sources":["icons/car.svg","icons/bike.svg","icons/scooter.svg","Components/MapAttribution/MapAttribution.js","Components/Selector/Selector.js","Components/SidebarSection/Section.js","Components/ProviderList/ProviderList.js","Components/BottomBar/BottomBar.js","Components/GridLabels/GridLabels.js","Components/Sidebar/Sidebar.js","views.js","config.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","MapAttribution","react_default","a","createElement","className","href","title","rel","target","Selector","handleClick","index","_this","props","changeActive","type","options","_this2","this","grid","gridTemplateColumns","concat","length","style","map","x","i","classes","active","push","join","key","onClick","charAt","toUpperCase","substring","React","Component","Section","_ref","children","borderTop","padding","icons","car","carIcon","bike","bikeIcon","scooter","scooterIcon","units","distance","trips","price","numberWithCommas","toString","replace","ProviderList","Fragment","providers","provider","filteredData","data","filter","properties","name","value","max","reduce","b","cost","background","color","width","format","toFixed","modes","mode","height","src","alt","addDays","date","days","result","Date","setDate","getDate","Histogram","drawChart","window","addEventListener","document","getElementById","innerHTML","histogramData","startDate","start","min","end","margin","offsetWidth","d3","domain","rangeRound","y","range","histogram","d","thresholds","ticks","svg","append","attr","bins","selectAll","enter","x0","x1","id","BottomBar","currMin","currMax","toLocaleString","split","loaded","BottomBar_Histogram","marginLeft","es","onChange","filterDate","count","defaultValue","allowCross","trackStyle","backgroundColor","handleStyle","borderRadius","border","activeHandleStyle","railStyle","GridLabels","l","labels","console","log","label","Sidebar","getGridView","size1","size2","controller","sizeLookup","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","viewStates","longitude","latitude","zoom","pitch","bearing","color2","transitionInterpolator","FlyToInterpolator","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","activeMetric","activeLayer","forceUpdate","activeView","in","setTimeout","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","oncontextmenu","evt","preventDefault","url","features","Math","apply","state","minDate","maxDate","stop","animate","transitionActive","curr","timer","setInterval","clearInterval","moveSidebar","sidebarOpen","rotateCamera","assign","transitionDuration","transitionEasing","easeCubic","onLoad","toggleProviders","onViewStateChange","viewId","modified","viewState","render","hexd","transitionData","feature","coordinates","geometry","slice","_loop","_data","toConsumableArray","startCoordinates","Number","endCoordinates","views","pathLayer","PathLayer","widthScale","widthMinPixels","getPath","getColor","rounded","getWidth","pickable","autoHighlight","highlightColor","parameters","depthTest","hexLayer","HexagonLayer","radius","round","elevationScale","getPosition","colorRange","onHover","_ref2","object","arcLayer","ArcLayer","getSourcePosition","getTargetPosition","getSourceColor","getTargetColor","layers","Components_MapAttribution_MapAttribution","Components_Sidebar_Sidebar","marginBottom","SidebarSection_Section","Components_Selector_Selector","Components_ProviderList_ProviderList","Components_BottomBar_BottomBar","Components_GridLabels_GridLabels","deckgl","minZoom","dist_esm","initialViewState","esm","mapStyle","ReactDOM","src_App_0"],"mappings":"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","file":"static/js/main.f21fdfce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car.18180132.svg\";","module.exports = __webpack_public_path__ + \"static/media/bike.ba4fb8df.svg\";","module.exports = __webpack_public_path__ + \"static/media/scooter.47924a3a.svg\";","import React from 'react';\n\nconst MapAttribution = () => (\n   <div className=\"attribution\">\n      Map data © <a href=\"https://here.com\">HERE</a> 2019. Renderer: deck.gl. Icons made by <a href=\"https://www.freepik.com/\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" rel=\"noopener noreferrer\" target=\"_blank\">CC 3.0 BY</a>\n   </div>\n)\n\nexport default MapAttribution;","import React from 'react';\nimport './Selector.css';\n\nclass Selector extends React.Component {\n\n\n   handleClick = (index) => {\n      this.props.changeActive(this.props.type, this.props.options[index])\n   }\n   render() {\n\n      const grid = {\n         gridTemplateColumns:` repeat(${this.props.options.length}, 1fr)`\n      }\n\n      return(\n         <div style={grid} className=\"selector-outside\">\n            {\n               this.props.options.map((x,i) => {\n                  const classes = ['selector-option', 'noselect'];\n                  if (this.props.active === x) {\n                     if (i === 0) {\n                        classes.push('left-selector-active');\n                     } else if (i === this.props.options.length - 1) {\n                        classes.push('right-selector-active');\n                     } else {\n                        classes.push('selector-active');\n                     }\n                  } else {\n                     if (i !== 0 && i !== this.props.options.length - 1) {\n                        if (i === 1 && this.props.options.length > 2) {\n                           classes.push('first-center-selector-option');\n                        } else {\n                           classes.push('center-selector-option')\n                        }\n\n                     }\n                  }\n                  return <div\n                     className={classes.join(' ')}\n                     key={i}\n                     onClick={() => this.handleClick(i)}\n                  >\n                     {x.charAt(0).toUpperCase() + x.substring(1)}\n                  </div>\n               })\n            }\n         </div>\n      )\n   }\n}\n\nexport default Selector;\n","import React from 'react';\n\nconst Section = ({ children }) => {\n   const style = {\n      borderTop: '1px solid #E8E8E8',\n      padding: '15px 0',\n   }\n   return (\n      <div style={style}> {children} </div>\n   )\n}\n\nexport default Section;\n","import React from 'react';\nimport './ProviderList.css';\n\nimport carIcon from '../../icons/car.svg';\nimport bikeIcon from '../../icons/bike.svg';\nimport scooterIcon from '../../icons/scooter.svg';\n\nconst icons = {\n   car: carIcon,\n   bike: bikeIcon,\n   scooter: scooterIcon\n}\n\nconst units = {\n   distance: 'miles',\n   trips: 'trips',\n   price: 'dollars'\n}\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nclass ProviderList extends React.Component {\n\n\n   render() {\n\n      return(\n         <>\n            {\n               this.props.providers.map((provider, i) => {\n\n                  const filteredData = this.props.data.filter(x => x.properties.provider === provider.name);\n\n                  let value = 0;\n                  let max = 0;\n\n                  if (provider.active) {\n                     if (this.props.active === 'trips') {\n                        value = filteredData.length;\n                        max = this.props.data.length;\n                     } else if (this.props.active === 'distance') {\n                        if (value === filteredData.map(x => x.properties.distance).length === 0) {\n                           value = 0;\n                        } else {\n                           value = filteredData.map(x => x.properties.distance)\n                              .reduce((a,b) => a + b);\n                        }\n\n                        max = this.props.data.map(x => x.properties.distance)\n                           .reduce((a,b) => a + b);\n                     } else if (this.props.active === 'price') {\n\n                        if (filteredData.map(x => x.properties.cost).length === 0) {\n                           value = 0;\n                        } else {\n                           value = filteredData.map(x => x.properties.cost)\n                              .reduce((a,b) => a + b);\n                        }\n\n                        max = this.props.data.map(x => x.properties.cost)\n                           .reduce((a,b) => a + b);\n                     }\n                  }\n\n\n                  const style = {\n                     background: provider.active ? provider.color : '#DBDBDB',\n                     width: provider.active ?\n                     value / max * 100 + '%' :\n                     '0%'\n                  }\n\n\n                  let format = '';\n                  if (this.props.active === 'price') {\n                     format = `$${numberWithCommas(value.toFixed(2))}`\n                  } else if (this.props.active === 'distance') {\n                     format = `${numberWithCommas(value.toFixed(0))} ${units[this.props.active]}`\n                  } else if (this.props.active === 'trips') {\n                     format = `${value} ${units[this.props.active]}`\n                  }\n                  return <div\n                        key={i}\n                        className=\"provider noselect\"\n                        onClick={() => this.props.handleClick(provider.name)}\n                     >\n                     <div style={style} className=\"line\" />\n                     <span style={{color: provider.active ? 'black' : '#737373'}} className=\"title\">\n                        {provider.name.charAt(0).toUpperCase() + provider.name.substring(1)}\n\n                     </span>\n                     {\n                        <span className=\"sub\">{ format }</span>\n                     }\n\n                     <div className=\"icon-container\">\n                        {\n                           provider.active &&\n                           provider.modes.map((mode, i) =>\n                              <img key={i} style={{height: '17px'}} src={icons[mode]} alt=\"transportation mode icon\" />\n                           )\n                        }\n                        {\n                           !provider.active &&\n                           <span> (hidden)</span>\n                        }\n\n                     </div>\n\n                  </div>\n               })\n            }\n         </>\n      )\n   }\n}\n\nexport default ProviderList;\n","import React from 'react';\nimport './BottomBar.css';\nimport * as d3 from \"d3\";\n\nimport { Range } from 'rc-slider';\nimport './Slider.css';\n\nfunction addDays(date, days) {\n   const result = new Date(date);\n   result.setDate(result.getDate() + days);\n   return result;\n}\n\n\nclass Histogram extends React.Component {\n   componentDidMount() {\n      this.drawChart();\n      window.addEventListener('resize', () => this.drawChart())\n   }\n\n   drawChart() {\n      document.getElementById('chart').innerHTML = ''\n      let histogramData = this.props.data.map(x => new Date(x.properties.startDate));\n      const start = this.props.min;\n      const end = this.props.max;\n      const margin = {\n         top: 10,\n         right: 0,\n         bottom: 5,\n         left: 0\n      }\n\n      const width = document.getElementById('chart').offsetWidth;\n      const height = 50 - margin.top - margin.bottom;\n\n      const x = d3.scaleTime().domain([\n         addDays(start, -7), //new Date(2017, 1, 20),\n         addDays(end, 7)\n      ]).rangeRound([0, width]);\n      const y = d3.scaleLinear().range([height, 0]);\n\n      const histogram = d3.histogram().value(function(d) {\n         return d;\n      }).domain(x.domain()).thresholds(x.ticks(\n         d3.timeMonth\n      ));\n\n      const svg = d3.select(\"#chart\").append(\"svg\")\n         .attr(\"width\", width + margin.left + margin.right)\n         .attr(\"height\", height + margin.top + margin.bottom).append(\"g\")\n         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      const bins = histogram(histogramData);\n\n      y.domain([\n         0,\n         d3.max(bins, function(d) {\n            return d.length;\n         })\n      ]);\n\n      svg.selectAll(\"rect\").data(bins).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", 1).attr(\"transform\", function(d) {\n            return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\";\n         }).attr(\"width\", function(d) {\n            return x(d.x1) - x(d.x0) - 1 > 0 ? x(d.x1) - x(d.x0) - 1 : 0;\n         })\n         .attr(\"height\", function(d) {\n            return height - y(d.length);\n         })\n   }\n\n\n   render() {\n\n\n      return <div id=\"chart\"></div>;\n\n   }\n}\n\nclass BottomBar extends React.Component {\n\n   render() {\n      const currMin = new Date(this.props.currMin);\n      const currMax = new Date(this.props.currMax);\n\n      return (\n         <div className=\"bottom-bar\">\n            <div className=\"date-row\">\n\n               <div>{this.props.data.length > 0 ? currMin.toLocaleString().split(',')[0] : ''}</div>\n               <div>{this.props.data.length > 0 ?  currMax.toLocaleString().split(',')[0] : ' '}</div>\n\n            </div>\n            {\n               this.props.loaded &&\n               <>\n                  <Histogram\n                     data={this.props.data}\n                     min={this.props.min}\n                     max={this.props.max}\n\n                  / >\n                  <div style={{marginLeft: '5px'}}>\n                     <Range\n                        onChange={this.props.filterDate}\n                        min={this.props.min}\n                        max={this.props.max}\n                        count={2}\n                        defaultValue={[this.props.min, this.props.max]}\n                        allowCross={false}\n                        trackStyle={[{ backgroundColor: '#363636' }]}\n                        handleStyle={[{\n                           backgroundColor: 'black',\n                           borderRadius: '0',\n                           border: '0',\n                           width: '8px',\n                           padding: '0'\n                        },\n                        {\n                           backgroundColor: 'black',\n                           borderRadius: '0',\n                           border: '0',\n                           width: '8px',\n                           padding: '0'\n                        }]}\n                        activeHandleStyle={[{\n                           background: 'green'\n                        }\n\n                        ]}\n                        railStyle={{ backgroundColor: '#D6D6D6' }}\n                     />\n                  </div>\n               </>\n            }\n            {\n               !this.props.loaded &&\n               <div\n                  style={{height: '84px'}}\n               >\n\n               </div>\n            }\n\n\n\n\n         </div>\n      )\n   }\n}\n\n\n\nexport default BottomBar;\n","import React from 'react';\nimport './GridLabels.css';\nconst GridLabels = ({labels}) => {\n   const l = labels.map(x => x.name);\n   console.log(l)\n   return (\n      <div className=\"grid-grid\">\n         {\n            l.map((label, i) => {\n               return (\n                  <div key={i}>\n                     <div className=\"label\">\n                        {label}\n                     </div>\n\n                  </div>\n               )\n            })\n         }\n      </div>\n   )\n}\n\nexport default GridLabels;\n","import React from 'react';\nimport './Sidebar.css';\n\nclass Sidebar extends React.Component {\n   render() {\n      return(\n         <div className=\"sidebar\">\n            {this.props.children}\n         </div>\n      )\n   }\n}\n\nexport default Sidebar;\n","const getGridView = () => {\n   const size1 = 1 / 3 * 100 +'%';\n   const size2 = 2 / 3 * 100 + '%';\n   return [\n      //Row 1\n      {\n         id: 'top',\n         width: size1,\n         height: size1,\n         controller: true\n      },\n      {\n         id: 'bottom',\n         x: size1,\n         y: 0,\n         width: size1,\n         height: size1,\n         controller: true\n      },\n      {\n         id: '2',\n         x: size2,\n         y: 0,\n         width: size1,\n         height: size1,\n         controller: true\n      },\n\n      //Row 2\n      {\n         id: '3',\n         x: 0,\n         y: size1,\n         width: size1,\n         height: size1,\n         controller: true\n      },\n      {\n         id: '4',\n         x: size1,\n         y: size1,\n         width: size1,\n         height: size1,\n         controller: true\n      },\n      {\n         id: '5',\n         x: size2,\n         y: size1,\n         width: size1,\n         height: size1,\n         controller: true\n      },\n\n      //Row 3\n      {\n         id: '6',\n         x: 0,\n         y: size2,\n         width: size1,\n         height: size1,\n         controller: true\n      },\n      {\n         id: '7',\n         x: size1,\n         y: size2,\n         width: size1,\n         height: size1,\n         controller: true\n      },\n      {\n         id: '8',\n         x: size2,\n         y: size2,\n         width: size1,\n         height: size1,\n         controller: true\n      },\n   ]\n}\n\nexport default getGridView;\n","const sizeLookup = {\n   1: 500000,\n   2: 200000,\n   3: 100000,\n   4: 50000,\n   5: 25000,\n   6: 12500,\n   7: 6250,\n   8: 3000,\n   9: 1200,\n   10: 600,\n   11: 400,\n   12: 200,\n   13: 100,\n   14: 80,\n   15: 40,\n   16: 20,\n   17: 10,\n   18: 5,\n   19: 5,\n   20: 5\n}\n\nconst viewStates = [{\n      longitude: -122.35021467990396,\n      latitude: 47.623954436942995,\n      zoom: 14, //8\n      pitch: 60,\n      bearing: -20,\n      name: 'Seattle, WA'\n   },\n   {\n      longitude: 13.404954,\n      latitude: 52.520008,\n      zoom: 14,\n      pitch: 60,\n      bearing: -60,\n      name: 'Berlin, Germany'\n   },\n   {\n      longitude: -122.41251212803706,\n      latitude: 37.77116905512072,\n      zoom: 8,\n      pitch: 20,\n      bearing: 0,\n      name: 'San Francisco, CA'\n   },\n   {\n      longitude: -117.19453161713136,\n      latitude: 32.7459306899641,\n      zoom: 8,\n      pitch: 20,\n      bearing: 0,\n      name: 'San Diego, CA'\n   },\n   {\n      longitude: -87.65142984345374,\n      latitude: 41.87225195677442,\n      zoom: 10,\n      pitch: 20,\n      bearing: 0,\n      name: 'Chicago, IL'\n   },\n   {\n      longitude: -66.06411721833007,\n      latitude: 18.465526764926423,\n      zoom: 11,\n      pitch: 20,\n      bearing: 0,\n      name: 'San Juan, PR'\n   },\n   {\n      longitude: -83.03440701349251,\n      latitude: 42.34305805549184,\n      zoom: 8,\n      pitch: 20,\n      bearing: 0,\n      name: 'Detroit, MI'\n   },\n   {\n      longitude: 28.979530,\n      latitude: 41.015137,\n      zoom: 10,\n      pitch: 20,\n      bearing: 0,\n      name: 'Istanbul, Turkey'\n   },\n   {\n      longitude: 4.899431,\n      latitude: 52.379189,\n      zoom: 10,\n      pitch: 20,\n      bearing: 0,\n      name: 'Amsterdam, Netherlands'\n   }\n]\n\nconst providers = [{\n      name: 'uber',\n      color: '#276EF1',\n      color2: [39, 110, 241, 200],\n      modes: ['car'],\n      active: true\n   },\n   {\n      name: 'jump',\n      color: '#E73A14',\n      color2: [231, 58, 20, 200],\n      modes: ['bike', 'scooter'],\n      active: true\n   },\n   {\n      name: 'lime',\n      color: '#25CF00',\n      color2: [37, 207, 0, 200],\n      modes: ['bike', 'scooter'],\n      active: true\n   },\n   {\n      name: 'lyft',\n      color: '#FE00D8',\n      color2: [254, 0, 126, 200],\n      modes: ['car'],\n      active: true\n   },\n];\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nexport {\n   sizeLookup,\n   viewStates,\n   providers,\n   months\n};\n","//React\nimport React from 'react';\n\n//DeckGL\nimport DeckGL from '@deck.gl/react';\nimport { StaticMap, FlyToInterpolator } from 'react-map-gl';\nimport { PathLayer, ArcLayer } from '@deck.gl/layers';\nimport { HexagonLayer } from '@deck.gl/aggregation-layers';\nimport { MapView } from '@deck.gl/core';\n\n//CSS\nimport './App.css';\n\n//Components\nimport MapAttribution from './Components/MapAttribution/MapAttribution'\nimport Selector from './Components/Selector/Selector';\nimport Section from './Components/SidebarSection/Section'\nimport ProviderList from './Components/ProviderList/ProviderList';\nimport BottomBar from './Components/BottomBar/BottomBar';\nimport GridLabels from './Components/GridLabels/GridLabels';\nimport Sidebar from './Components/Sidebar/Sidebar';\n\n//Other\nimport getGridView from './views';\nimport { sizeLookup, viewStates, providers } from './config';\nimport { easeCubic } from \"d3-ease\";\nimport url from './assets/data.json'\nimport mapStyle from './assets/map-style.json'\n\nconst transitionInterpolator = new FlyToInterpolator();\n\nclass App extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         sidebarOpen: true,\n         in: true,\n         loaded: false,\n         viewStates,\n         data: [],\n         curr: 0,\n         providers,\n         activeMetric: 'trips',\n         activeLayer: 'polylines',\n         activeView: 'double',\n         minDate: new Date('08/07/1995'), //Happy birthday to me\n         maxDate: new Date()\n      }\n   }\n\n   changeActive = (type, value) => {\n      if (type === 'metric') {\n         this.setState({\n            activeMetric: value\n         })\n      } else if (type === 'layer') {\n         this.setState({\n            activeLayer: value\n         })\n         this.forceUpdate();\n      } else if (type === 'view') {\n         this.setState({\n            activeView: value,\n            in: true\n         })\n         setTimeout(() => {\n            this.setState({\n               in: false\n            })\n         }, 1000)\n      }\n   }\n\n   componentDidMount = async () => {\n      console.log('loading data...')\n      console.log('Thanks for taking a look under the hood. Questions? dylan.babbs@gmail.com')\n      document.getElementById('deckgl-overlay').oncontextmenu = evt => evt.preventDefault();\n      const data = url\n      this.setState({\n         data: data.features,\n         loaded: true\n      }, () => {\n         const min = Math.min.apply(null,\n            this.state.data.map(x => new Date(x.properties.startDate))\n         );\n         const max = Math.max.apply(null,\n            this.state.data.map(x => new Date(x.properties.startDate))\n         );\n         this.setState({\n            minDate: min,\n            maxDate: max\n         })\n      });\n   }\n\n   animate = () => {\n      this.setState({\n         transitionActive: true,\n         curr: 0\n      })\n      setTimeout(() => {\n         const timer = setInterval(() => {\n            this.setState({\n               curr: this.state.curr + 1,\n            })\n            if (this.state.curr === 180) { //180\n               clearInterval(timer)\n               this.setState({\n                  transitionActive: false\n               })\n            }\n         }, 3) //3\n      }, 2000)\n   }\n\n   moveSidebar = () => {\n      this.setState({\n         sidebarOpen: !this.state.sidebarOpen\n      })\n   }\n\n   rotateCamera = () => {\n      this.setState({\n         in: false\n      })\n      const viewStates = Object.assign({}, this.state.viewStates);\n      viewStates[0] = {\n         name: 'Seattle, WA',\n         zoom: 11,\n         latitude: 47.611171,\n         longitude: -122.313158,\n         bearing: 22,\n         pitch: 60,\n         transitionDuration: 10000,\n         transitionEasing: easeCubic,\n         transitionInterpolator,\n      }\n      viewStates[1] = {\n         name: 'Berlin, DE',\n         longitude: 13.404954,\n         latitude: 52.520008,\n         zoom: 11,\n         pitch: 60,\n         bearing: 0,\n         transitionDuration: 10000,\n         transitionEasing: easeCubic,\n         transitionInterpolator,\n      }\n      this.setState({ viewStates });\n   }\n\n   onLoad = () => {\n      this.rotateCamera();\n      this.animate();\n   }\n\n   toggleProviders = p => {\n      const providers = this.state.providers.map(x => {\n         if (x.name === p) {\n            x.active = !x.active;\n         }\n         return x;\n      })\n      this.setState({\n         providers: providers\n      })\n   }\n\n   filterDate = evt => {\n      this.setState({\n         minDate: new Date(evt[0]),\n         maxDate: new Date(evt[1])\n      })\n   }\n\n   onViewStateChange = evt => {\n      const { viewId, viewState: modified } = evt;\n      const { viewStates } = this.state;\n\n      viewStates[viewId] = modified;\n      this.setState({ viewStates })\n      if (modified.zoom > 1) {\n         this.setState({ zoom: modified.zoom })\n      }\n   }\n\n   render = () => {\n      let data = [];\n      let hexd = [];\n      let transitionData = [];\n      let min = new Date();\n      let max = new Date();\n      \n\n      if (this.state.data.length > 0) {\n         min = Math.min.apply(null, this.state.data.map(x => new Date(x.properties.startDate)));\n         max = Math.max.apply(null, this.state.data.map(x => new Date(x.properties.startDate)));\n\n         transitionData = this.state.data.length === 0 ? [] : this.state.data.map(feature => {\n            const coords = feature.geometry.coordinates.slice(1, this.state.curr);\n            return {\n               coordinates: coords,\n               provider: feature.properties.provider\n            }\n         })\n\n         for (let i = 0; i < this.state.providers.length; i++) {\n            if (this.state.providers[i].active) {\n               data.push(\n                  ...this.state.data.filter(x => x.properties.provider === this.state.providers[i].name)\n               );\n            }\n         }\n\n         data = data.filter(x => new Date(x.properties.startDate) >= this.state.minDate)\n            .filter(x => new Date(x.properties.startDate) <= this.state.maxDate)\n         hexd = [\n            ...data.map(x => x.properties.startCoordinates.map(x => Number(x))),\n            ...data.map(x => x.properties.endCoordinates.map(x => Number(x)))\n         ]\n      }\n\n      const pathLayer = new PathLayer({\n         id: 'path-layer',\n         data: this.state.transitionActive ? transitionData : data,\n         widthScale: 3,\n         widthMinPixels: 3,\n         getPath: d => this.state.transitionActive ? d.coordinates : d.geometry.coordinates,\n         getColor: d => {\n            let provider = this.state.transitionActive ? d.provider : d.properties.provider;\n            return this.state.providers.filter(x => x.name === provider)[0].color2;\n         },\n         rounded: true,\n         getWidth: d => 10,\n         pickable: true,\n         autoHighlight: true,\n         highlightColor: [249, 226, 0],\n         parameters: {\n            depthTest: false\n         }\n      });\n\n      const hexLayer = new HexagonLayer({\n         id: 'hexagon-layer',\n         data: hexd,\n         pickable: true,\n         radius: sizeLookup[Math.round(this.state.zoom)],\n         elevationScale: 4,\n         getPosition: d => d,\n         colorRange: [\n            [32, 62, 154],\n            [85, 29, 173],\n            [192, 25, 188],\n            [211, 19, 86],\n            [230, 71, 10],\n            [249, 226, 0]\n         ],\n         onHover: ({ x, y, object }) => !this.state.transitionActive\n      });\n\n      const arcLayer = new ArcLayer({\n         id: 'arc-layer',\n         data: data,\n         pickable: true,\n         autoHighlight: true,\n         highlightColor: [249, 226, 0],\n         getWidth: 4,\n         getSourcePosition: d => d.properties.startCoordinates,\n         getTargetPosition: d => d.properties.endCoordinates,\n         getSourceColor: d => {\n            let provider = d.properties.provider;\n            return this.state.providers.filter(x => x.name === provider)[0].color2;\n         },\n         getTargetColor: d => {\n            let provider = d.properties.provider;\n            return this.state.providers.filter(x => x.name === provider)[0].color2;\n         }\n      });\n\n      const layers = [];\n      if (this.state.activeLayer === 'polylines') {\n         layers.push(pathLayer);\n      }\n      if (this.state.activeLayer === 'hexbins') {\n         layers.push(hexLayer);\n      }\n      if (this.state.activeLayer === 'arcs') {\n         layers.push(arcLayer);\n      }\n\n      let views;\n      if (this.state.activeView === 'single') {\n         views = [\n            {\n               id: '0',\n               width: '100%',\n               height: '100%',\n               controller: true,\n            }\n         ]\n      } else if (this.state.activeView === 'double') {\n         views = [\n            {\n               id: '0',\n               width: '50%',\n               height: '100%',\n               controller: true,\n            },\n            {\n               id: '1',\n               width: '50%',\n               height: '100%',\n               x: '50%',\n               controller: true,\n            }\n         ]\n      } else {\n         views = getGridView();\n      }\n      console.log(viewStates)\n      return (\n         <>\n            <MapAttribution />\n            <Sidebar>\n               <h1>Dylan's Mobility Service Map</h1>\n               {\n                  this.state.sidebarOpen &&\n                  <>\n                     <p style={{marginBottom: 15}}>A visualization of my mobility service trips. Made by <a href=\"https://twitter.com/dbabbs\">@dbabbs</a></p>\n                     <Section>\n                        <h2>Trip Analytics</h2>\n                        <Selector\n                           type=\"metric\"\n                           options={['trips', 'price', 'distance']}\n                           active={this.state.activeMetric}\n                           changeActive={this.changeActive}\n                        />\n                        <ProviderList\n                           handleClick={this.toggleProviders}\n                           providers={this.state.providers}\n                           data={data}\n                           active={this.state.activeMetric}\n                        />\n                        <p> Filter a mobility provider by clicking on it. </p>\n                     </Section>\n                     <Section>\n                        <h2>Toggle Layer Type</h2>\n                        <Selector\n                           type=\"layer\"\n                           options={['polylines', 'hexbins', 'arcs']}\n                           active={this.state.activeLayer}\n                           changeActive={this.changeActive}\n                        />\n                        <p>\n                           {\n                              this.state.activeLayer === 'polylines' &&\n                              'Polyines - approximate route of trip.'\n                           }\n                           {\n                              this.state.activeLayer === 'hexbins' &&\n                              'Hexbins - aggregated pickups & dropoffs.'\n                           }\n                           {\n                              this.state.activeLayer === 'arcs' &&\n                              'Arcs - pickup and dropoff points.'\n                           }\n                        </p>\n                     </Section>\n                     <Section>\n                        <h2>Toggle View</h2>\n                        <Selector\n                           type=\"view\"\n                           options={['single', 'double', 'grid']}\n                           active={this.state.activeView}\n                           changeActive={this.changeActive}\n                        />\n                     </Section>\n                  </>\n               }\n            </Sidebar>\n            <BottomBar\n               loaded={this.state.loaded}\n               data={data}\n               min={min}\n               max={max}\n               currMin={this.state.minDate}\n               currMax={this.state.maxDate}\n               filterDate={this.filterDate}\n            />\n            <div className=\"map-container\">\n               {\n                  this.state.activeView === 'grid' &&\n                  <GridLabels labels={viewStates} />\n               }\n               <DeckGL\n                  onLoad={this.onLoad}\n                  layers={layers}\n                  minZoom={3}\n                  onViewStateChange={this.onViewStateChange}\n               >\n                  {\n                     views.map((x, i) => {\n                        return (\n                           <MapView\n                              x={x.x}\n                              y={x.y}\n                              width={x.width}\n                              height={x.height}\n                              controller={x.controller}\n                              id={i.toString()}\n                              key={i}\n                              initialViewState={this.state.viewStates[i]}\n                              viewState={this.state.viewStates[i]}\n                           >\n                              <StaticMap mapStyle={mapStyle} />\n                           </MapView>\n                        )\n                     })\n                  }\n               </DeckGL>\n            </div>\n         </>\n      );\n   }\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}